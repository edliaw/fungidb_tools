#!/usr/bin/env python
"""Parse the first algorithm invocation id and plugin name from a ga's logging output stream.

2013-07-23
Edward Liaw
"""
from __future__ import print_function, unicode_literals
import sys
import argparse


def parse_arguments():
    """Handle command-line arguments.

    Returns:
        args: Arguments passed in from the command-line."""
    parser = argparse.ArgumentParser(description=__doc__,
                                     fromfile_prefix_chars='@')
    parser.add_argument('infile',
                        type=argparse.FileType('r'), nargs='?',
                        default=sys.stdin, help='input file')
    parser.add_argument('outfile',
                        type=argparse.FileType('w'), nargs='?',
                        default=sys.stdout, help='output file')
    parser.add_argument('-a', '--all',
                        action='store_true',
                        help='retrieve all unique algids in input')
    return parser.parse_args()


def write_algfile(algid, plugin, undo):
    return '\t'.join((algid, plugin, undo))


def main():
    args = parse_arguments()

    # Handle I/O.
    ids = set()
    plugin = ''
    with args.infile as infile, args.outfile as outfile:
        for line in infile:
            spline = line.split('\t', 2)
            if len(spline) == 3:
                if spline[1] == 'PLUGIN':
                    plugin = spline[2].rstrip()
                elif spline[1] == 'AlgInvocationId':
                    id = spline[2].rstrip()
                    if id not in ids:
                        outfile.write(write_algfile(id, plugin, "") + '\n')
                        ids.add(id)
                    if not args.all:
                        break


if __name__ == "__main__":
    main()
