#!/usr/bin/env python

from __future__ import print_function
import argparse
import json
import warnings
from lxml import etree
from fungidb_tools import datasets
from fungidb_tools.simple_gdata import SimpleGData


def parse_arguments():
    """Handle command-line arguments.

    Returns:
        args: Arguments passed in from the command-line.
    """
    parser = argparse.ArgumentParser(description=__doc__,
                                     fromfile_prefix_chars='@')
    parser.add_argument('--orgdir',
                        default=datasets.DEFAULT.DATASETS,
                        help='organism datasets directory')
    parser.add_argument('--fungifile',
                        default=datasets.DEFAULT.XML,
                        help='fungidb datasets file')
    parser.add_argument('--jsonfile',
                        default=datasets.DEFAULT.JSON,
                        help='jsonized spreadsheet')
    parser.add_argument('-d', '--debug',
                        action='store_true',
                        help='check spreadsheet for errors')
    parser.add_argument('--orthomcl',
                        default="5.12", help='orthomcl version')
    parser.add_argument('-e', '--email',
                        help='gmail login')
    parser.add_argument('-p', '--pword',
                        help='gmail password')
    return parser.parse_args()


def custom_formatwarning(msg, cat, fn, line, *a):
    return "{:s}:{:d}:  {:s}\n".format(fn, line, msg)

warnings.formatwarning = custom_formatwarning


def main():
    args = parse_arguments()

    sheet = SimpleGData.prompt_creds(args.email, args.pword)
    sheet.select_document(datasets.DEFAULT.GDOC)
    sheet.select_worksheet(datasets.DEFAULT.GSHEET)

    json_feed = sheet.json_feed()

    with open(args.jsonfile, 'w') as jsonfile:
        json.dump(json_feed, jsonfile, sort_keys=True, indent=2)

    organisms = [o for o in json_feed if datasets.bool_from_sheet(o[datasets.COL.ISLOADED])]

    ds = datasets.FungiDBXMLGenerator.from_json(organisms, args.orthomcl, args.debug)

    with open(args.fungifile, 'w') as fungifile:
        print(etree.tostring(ds.make_fungidb_xml()), file=fungifile)

    for orgfn, xml in ds.make_species_xmls(args.orgdir):
        with open(orgfn, 'w') as orgfile:
            print(etree.tostring(xml), file=orgfile)


if __name__ == "__main__":
    main()
